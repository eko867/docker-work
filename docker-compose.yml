version: '3' #без нее compose не работает (надо смотреть какая версия докера и докер-композ стоит на компе и какой ей допустима version)
services: #сервисы будут располагаться в отдельных контейнерах
    web:
        image: nginx #берем офиц образ с hub.docker.com
        container_name: nginx_blog #псевдоним будущего контейнера
        volumes:
            - ./.docker/conf/nginx/blog.conf:/etc/nginx/conf.d/blog.conf #линкуем конфиг сайта с монтируемой фс докер-контейнера
            - #линкуем логи
            - .:/var/www/html #линкуем весь проект, чтобы контейнеру были доступны все папки сайта
        ports:
            - 8080:80
        restart: always # если контейнер с сервером упадет, то автоматом перезапускается
        links:
            - php
        depends_on:
            - php
            - db
    php:
        build: .docker #взять образ после билда докер-файла DockerFile, лежащего в папке .docker (поставим пхп и расширения)
        container_name: php_blog #псевдоним будущего контейнера
        restart: always # если контейнер с пхп упадет, то автоматом перезапускается
        volumes:
            - ./.docker/conf/php/php.ini:/usr/local/etc/php/conf.d/php.ini #линкуем доп настройки пхп (вывод ошибок)
           # - ./.docker/conf/php/xdebug.ini:/etc/php/7.2/fpm/pool.d/showerrors.conf 
            - ./.docker/conf/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini #линкуем конфиги xdebug
           # - ./.docker/conf/php/xdebug.ini:/etc/php/7.2/php/conf.d/xdebug.ini 
            - .:/var/www/html
         links:
- db
         depends_on:
- db
    db:
        image: mysql
        container_name: mysql_blog #псевдоним будущего контейнера
        restart: always # если контейнер с БД упадет, то автоматом перезапускается
        environment: #настройкиокружения + еще в .env
            - MYSQL_ALLOW_EMPTY_PASSWORD=yes # or :yes
            - MYSQL_DATABASE=blog
            - MYSQL_USER=blog
            - MYSQL_PASSWORD=password
        ports:
            - 3307:3306
        volumes:
            - ./.docker/conf/mysql/:/docker-entrypoint-initdb.d/ #линкуем, чтобы БД хранилась в проекта 
   composer:
        image: composer #ставим офиц.образ композера
        container_name: composer_blog #псевдоним будущего контейнера
        volumes:
            - .:/app #делаем, чтобы композер видел все папки проекта
        command: install #устанавливаем зависимости (выполняется не при создании образа, а при запуске контейнера)
